#!/bin/sh
#
# rc.net  finds dyne:bolic NEST on all attached storage devices
#
# Copyright (C) 2003 Denis Rojo aka jaromil <jaromil@dyne.org>
# freely distributed in dyne:bolic GNU/Linux http://dynebolic.org
# 
# This source code is free software; you can redistribute it and/or
# modify it under the terms of the GNU Public License as published 
# by the Free Software Foundation; either version 2 of the License,
# or (at your option) any later version.
#
# This source code is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# Please refer to the GNU Public License for more details.
#
# You should have received a copy of the GNU Public License along with
# this source code; if not, write to:
# Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
# "Header: $"

# this script should always create a /boot/nest file
# containing the full path to the nest being used
# the current sctructure of a dyne:bolic nest is:
# = harddisk and usb-key 
# /home
# /etc
#
# = floppy disk
# /home/.ssh
# /home/.gnupg
# /home/.phoenix/default/xbsmkl86.slt/bookmarks.html
# /home/.phoenix/default/xbsmkl86.slt/mimeTypes.rdf
# /home/.phoenix/default/xbsmkl86.slt/prefs.js
# /home/.phoenix/default/xbsmkl86.slt/cookies.txt
# /home/.phoenix/default/xbsmkl86.slt/cert*
# /home/.phoenix/default/xbsmkl86.slt/*history*
#
# it should be matching the 'nidifica' script which creates nests
# anyway the list of files being saved in floppy is specified in cfg

source /lib/libdyne.sh

if [ -e /boot/nest ]; then rm -f /boot/nest; fi

# look into mounted harddisks

# scans the in $1 the given prefix ($2) of mounted media looking for nests
scan_media() {
    for HD in `ls --color=none ${1}* | grep $2`; do
	MOUNT="$1/${HD}"
	echo -n " .  $MOUNT -> "
	if [ -e "$MOUNT/$DYNEBOL_CFG" ]; then
	    echo "nest found!"
	    dyne_mount_nest "$MOUNT/$DYNEBOL_CFG"
	    return $?
#	    if [ $? == 1 ]; then break; fi
	fi
    done
    return 0
}



# old code only for harddisks (using df for scanning):
#    for HD in `df|grep $1|awk '{print $1}'`; do
#	HD_MOUNT=`df | grep ${HD} | awk '{print $6}'`
#	echo -n " .  ${HD}"
        # for every harddisk present, gathers infos
#	HD_SIZE=`df -h | grep ${HD} | awk '{print $2}'`
#	HD_USED=`df -h | grep ${HD} | awk '{print $3}'`
#	HD_LEFT=`df -h | grep ${HD} | awk '{print $4}'`
#	HD_PERCENT=`df | grep ${HD} | awk '{print $5}'`
#	echo -n " (${HD_USED}/${HD_SIZE} ${HD_PERCENT}) ..."
#	if [ -f "${HD_MOUNT}/${DYNEBOL_CFG}" ]; then
#	    echo -n " `ls -lh ${HD_MOUNT}/${DYNEBOL_NST} | awk '{print $5}'` nest found"
#	    dyne_mount_nest "${HD_MOUNT}/${DYNEBOL_CFG}"
#	else
#	    echo -n " no nest"
#	fi
#    done
}

if [ -e /rem/usbkey ]; then
    echo "[*] Scan for nests on mounted usbkey"
    scan_media "/rem" "usb"
fi

if [ -e /vol/hd1 ]; then
    echo "[*] Scan for nests on mounted harddisks"
    scan_media "/vol" "hd"
fi

if [ -e /rem/fd0 ]; then
    echo "[*] Scan for nests on mounted floppy"
    scan_media "/rem" "fd"
fi
