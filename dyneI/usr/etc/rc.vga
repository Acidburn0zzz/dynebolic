#!/bin/sh
# This is an attempt to recognize most vga cards in a very simple way
# jrml 4 agosto 2003 1.0-beta1
# of course this is GNU GPL
#
# TODO:
# + support multihead systems with multiple VGA cards

FILE_ID="\$Id$"
source /lib/libdyne.sh

CFG="/etc/XF86Config"
DISTCFG="/etc/XF86Config.dist"



if [ -e $CFG ]; then exit 1; fi

notice "detecting VGA video card:"
VGACARD="`lspci | grep VGA`"
act "${VGACARD}"

if [ ! -z "`lspci | grep -i ' vmware'`" ]; then
  act "using Xfree86 'vmware' driver for your virtual machine"
  sed "s/fbdev/vmware/g" $DISTCFG > $CFG
  exit 0;
fi

if [ ! -z "`echo ${VGACARD} | grep Unknown`" ]; then
  act "using framebuffer video device for unknown card"
  exit 0;
fi

if [ ! -z "`echo ${VGACARD} | grep -iE ' nvidia| riva| viper| tnt| geforce' | grep -v Unknown`" ]; then
  act "using XFree86 'nv' driver for your nVidia card"
  sed "s/fbdev/nv/g" $DISTCFG > $CFG
  exit 0;
fi

if [ ! -z "`echo ${VGACARD} | grep -i ' matrox'`" ]; then
  act "using XFree86 'mga' driver for your Matrox card"
  # write the X config
  sed "s/fbdev/mga/g" $DISTCFG > $CFG
  # load the kernel DRM module
  loadmod mga
  exit 0;
fi

if [ ! -z "`echo ${VGACARD} | grep -iE ' intel.*8'`" ]; then
  act "using XFree86 'i810' driver for your Intel card"
  sed "s/fbdev/i810/g" $DISTCFG > $CFG
  loadmod i810
  loadmod i830
  exit 0;
fi

if [ ! -z "`echo ${VGACARD} | grep -i ' neomagic'`" ]; then
  act "using XFree86 'neomagic' driver for your Neomagiccard"
  sed "s/fbdev/neomagic/g" $DISTCFG > $CFG
  exit 0;
fi

if [ ! -z "`echo ${VGACARD} | grep -i ' radeon'`" ]; then
  act "using XFree86 'radeon' driver for your Radeon card"
  sed "s/fbdev/radeon/g" $DISTCFG > $CFG
  act "loading Radeon direct rendering module"
  loadmod radeon
  exit 0;
fi
 
if [ ! -z "`echo ${VGACARD} | grep -i ' r128 '`" ]; then
  act "using the XFree86 'r128' driver for your r128 card" 
  sed "s/fbdev/r128/g" $DISTCFG > $CFG
  act "loading R128 direct rendering module"
  loadmod r128
  exit 0;
fi

if [ ! -z "`echo ${VGACARD} | grep -i ' mach64 '`" ]; then
  act "using the XFree86 'ati' driver for your Mach64 card" 
  sed "s/fbdev/ati/g" $DISTCFG > $CFG
  act "loading Mach64 direct rendering module"
  loadmod mach64 
  exit 0;
fi

if [ ! -z "`echo ${VGACARD} | grep -i ' ati'`" ]; then
  act "using XFree86 'ati' driver for your Ati card"
  sed "s/fbdev/ati/g" $DISTCFG > $CFG
  exit 0;
fi


if [ ! -z "`echo ${VGACARD} | grep -i ' savage'`" ]; then
  act "using XFree86 'savage' driver for your Savage card"
  sed "s/fbdev/savage/g" $DISTCFG > $CFG
  exit 0;
fi

if [ ! -z "`echo ${VGACARD} | grep -i ' Virge'`" ]; then
  act "using XFree86 's3virge' driver for your S3 Virge card"
  sed "s/fbdev/s3virge/g" $DISTCFG > $CFG
  exit 0;
fi

if [ ! -z "`echo ${VGACARD} | grep -i ' s3 '`" ]; then
  act "using XFree86 'S3' driver for your S3 card"
  sed "s/fbdev/s3/g" $DISTCFG > $CFG
  exit 0;
fi

if [ ! -z "`echo ${VGACARD} | grep ' SiS'`" ]; then
  
  # don't use sis driver for SiS6325 because it fallsback on 640x480
  # it is a device present on some gericom laptop //jrml 12/5/03 zagreb
  if [ ! -z "`echo ${VGACARD} | grep -i ' 6325'`" ]; then exit 0; fi
  
  act "using XFree86 'sis' driver for your SiS card"
  sed "s/fbdev/sis/g" $DISTCFG > $CFG
  act "loading SiS direct rendering module"
  loadmod sis
  exit 0;
fi

if [ ! -z "`echo ${VGACARD} | grep -i ' voodoo'`" ]; then
  act "using XFree86 'tdfx' driver for your Voodoo card"
  sed "s/fbdev/tdfx/g" $DISTCFG > $CFG
  act "loading 3dfx direct rendering module"
  loadmod tdfx
  exit 0;
fi

if [ ! -z "`echo ${VGACARD} | grep -i ' cirrus'`" ]; then
  act "using XFree86 'cirrus' driver for your Cirrus card"
  sed "s/fbdev/cirrus/g" $DISTCFG > $CFG
  exit 0;
fi

if [ ! -z "`echo ${VGACARD} | grep -i ' cyrix'`" ]; then
  act "using XFree86 'cyrix' driver for your Cirrus card"
  sed "s/fbdev/cyrix/g" $DISTCFG > $CFG
  exit 0;
fi

if [ ! -z "`echo ${VGACARD} | grep -i ' i128'`" ]; then
  act "using XFree86 'i128' driver for your I128 card"
  sed "s/fbdev/i128/g" $DISTCFG > $CFG
  exit 0;
fi

if [ ! -z "`echo ${VGACARD} | grep -iE ' intel.*74'`" ]; then
  act "using XFree86 'i740' driver for your i740 card"
  sed "s/fbdev/i740/g" $DISTCFG > $CFG
  exit 0;
fi

if [ ! -z "`echo ${VGACARD} | grep -i ' rendition'`" ]; then
  act "using XFree86 'rendition' driver for your Rendition card"
  sed "s/fbdev/rendition/g" $DISTCFG > $CFG
  exit 0;
fi

if [ ! -z "`echo ${VGACARD} | grep -iE ' silicon.*motion'`" ]; then
  act "using XFree86 'siliconmotion' driver for your SiliconMotion card"
  sed "s/fbdev/siliconmotion/g" $DISTCFG > $CFG
  exit 0;
fi

if [ ! -z "`lspci | grep -i ' trident '`" ]; then
  act "using Xfree86 'trident' driver for your Trident card"
  sed "s/fbdev/trident/g" $DISTCFG > $CFG
  exit 0;
fi

if [ ! -z "`lspci | grep -i ' tseng '`" ]; then
  act "using Xfree86 'tseng' driver for your Tseng card"
  sed "s/fbdev/tseng/g" $DISTCFG > $CFG
  exit 0;
fi



# fallback to framebuffer device
# the link is not forced: if we put our own XF86Config
# it will be used, overriding the fbdev fallback
act "no special driver needed, using VESA framebuffer device"
act "(you can't change resolutions other than 800x600x16bpp)"
cp $DISTCFG $CFG


