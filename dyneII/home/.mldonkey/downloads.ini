

    (************************************)
    (*   Never edit options files when  *)
    (*       the daemon is running      *)
    (************************************)
    (* SECTION : Main *)
    (* Main options *)
    (************************************)



	(* small name of client *)
 client_name = njesrr


    (************************************)
    (* SECTION : Interfaces *)
    (* Options to control ports used by mldonkey interfaces *)
    (************************************)



	(* list of IP address allowed to connect to the core via telnet/GUI/WEB
	list separated by spaces, wildcard=255 ie: use 192.168.0.255 for 192.168.0.*  *)
 allowed_ips = [
  "127.0.0.1";]

	(* port for Graphical Interfaces *)
 gui_port = 4001

	(* port for GiFT Graphical Interfaces interaction *)
 gift_port = 1213

	(* The port used to connect to your client with a WEB browser *)
 http_port = 4080

	(* port for user interaction *)
 telnet_port = 4000


    (************************************)
    (* SECTION : Bandwidth *)
    (*  *)
    (************************************)



	(* The maximal upload rate you can tolerate on your link in kBytes/s (0 = no limit)
	  The limit will apply on all your connections (clients and servers) and both
	control and data messages. *)
 max_hard_upload_rate = 7

	(* The maximal download rate you can tolerate on your link in kBytes/s (0 = no limit)
	  The limit will apply on all your connections (clients and servers) and both
	control and data messages. *)
 max_hard_download_rate = 50

	(* Maximal number of opened connections *)
 max_opened_connections = 200

	(* How many slots can be used for upload *)
 max_upload_slots = 5

	(* Set this to true if you want to have dynamic upload slot allocation (experimental) *)
 dynamic_slots = false

	(* Maximal number of connections that can be opened per second *)
 max_connections_per_second = 10

	(* list of IP addresses allowed to connect to the core with no limit on
	upload/download and upload slots.  List separated by spaces, wildcard=255 
	ie: use 192.168.0.255 for 192.168.0.*  *)
 nolimit_ips = [
  "127.0.0.1";]

	(* This option enables MLdonkey to always read as much data as possible
	  from a channel, but use more CPU as it must then copy the data in the
	    channel buffer. *)
 copy_read_buffer = true


    (************************************)
    (* SECTION : Networks *)
    (* Networks options *)
    (************************************)



	(* Set to true if you also want mldonkey to run as an overnet client (enable_donkey must be true) *)
 enable_overnet = true

	(* Set to true if you also want mldonkey to run as an Bittorrent client *)
 enable_bittorrent = false

	(* Set to true if you also want mldonkey to run as a donkey client *)
 enable_donkey = false

	(* Set to true if you also want mldonkey to run as a napster client (experimental) *)
 enable_opennap = false

	(* Set to true if you also want mldonkey to run as a soulseek client (experimental) *)
 enable_soulseek = false

	(* Set to true if you also want mldonkey to run as a gnutella1 sub node (experimental) *)
 enable_gnutella = false

	(* Set to true if you also want mldonkey to run as a gnutella2 sub node (experimental) *)
 enable_gnutella2 = false

	(* Set to true if you also want mldonkey to run as a Fasttrack sub node (experimental) *)
 enable_fasttrack = false

	(* Set to true if you also want mldonkey to run as a direct-connect node (experimental) *)
 enable_directconnect = false

	(* Set to true if you also want mldonkey to download HTTP files (experimental) *)
 enable_fileTP = true


    (************************************)
    (* SECTION : Network Config *)
    (* Network config options *)
    (************************************)



	(* The last IP address used for this client *)
 client_ip = "192.168.0.104"

	(* Use the IP specified by 'client_ip' instead of trying to determine it
	    ourself. Don't set this option to true if you have dynamic IP. *)
 force_client_ip = false

	(* A list of lines to download on the WEB: each line has 
	    the format: (kind, period, url), where kind is either
	    'server.met' (for a server.met file), or 'comments.met' for
	    a file of comments, and period is the period between updates 
	    (in hours), and url is the url of the file to download.
	    IMPORTANT: Put the URL and the kind between quotes.
	    EXAMPLE:
	 web_infos = [
	  ('server.met', 24, 'http://www.primusnet.ch/users/komintern/ed2k/min/server.met');
	  ('guarding.p2p', 48, 'http://homepage.ntlworld.com/tim.leonard1/guarding.p2p')
	
	 ]
	   *)
 web_infos = [
  ("server.met", 24, "http://ocbmaurice.dyndns.org/pl/slist.pl/server.met?download/server-best.met");
  (ocl, 24, "http://members.lycos.co.uk/appbyhp2/FlockHelpApp/contact-files/contact.ocl");
  ("guarding.p2p", 96, "http://www.bluetack.co.uk/config/antip2p.txt");
  (rss, 6, "http://www.ed2k-it.com/forum/news_rss.php");
  (rss, 6, "http://www.torrents.co.uk/backend.php");
  (rss, 6, "http://varchars.com/rss/suprnova-movies.rss");]

	(* Direct HTTP queries to HTTP proxy *)
 http_proxy_server = ""

	(* Port of HTTP proxy *)
 http_proxy_port = 8080

	(* Direct TCP connections to HTTP proxy (the proxy should support CONNECT) *)
 http_proxy_tcp = false


    (************************************)
    (* SECTION : HTML mods *)
    (* Options to configure HTML mode *)
    (************************************)



	(* bw_stats refresh delay (seconds) *)
 html_mods_bw_refresh_delay = 11

	(* html_mods_theme to use (located in relative html_themes/<theme_name> directory, leave blank to use internal theme *)
 html_mods_theme = ""


    (************************************)
    (* SECTION : Download *)
    (* Download options *)
    (************************************)



	(* Set to false if you don't want mldonkey to automatically put completed files in incoming directory *)
 auto_commit = true

	(* The maximal number of files in Downloading state (other ones are Queued) *)
 max_concurrent_downloads = 60

	(* The maximal length of zero bytes between non-zero bytes in a file that
	should be interpreted as downloaded during a recovery *)
 max_recover_zeroes_gap = 16

	(* A command that is called when a file is completely
	    downloaded. Arguments are: <file_name on disk> <md4> <size> *)
 file_completed_cmd = ""

	(* The command which is called when a download is started. Arguments
	are '-file <num>' *)
 file_started_cmd = ""


    (************************************)
    (* SECTION : Startup *)
    (* Startup options *)
    (************************************)



	(* The login of the user you want mldonkey to run as, after the ports
	  have been bound (can be use not to run with root priviledges when 
	a port < 1024 is needed) *)
 run_as_user = ""

	(* The UID of the user (0=disabled) you want mldonkey to run as, after the ports
	  have been bound (can be use not to run with root priviledges when 
	a port < 1024 is needed) *)
 run_as_useruid = 0

	(* Ask for GUI start *)
 ask_for_gui = false

	(* Automatically Start the GUI *)
 start_gui = false

	(* Should MLdonkey try to recover downloads of files in temp/ at startup *)
 recover_temp_on_startup = true


    (************************************)
    (* SECTION : Mail *)
    (* Mail options *)
    (************************************)



	(* The mail server you want to use (must be SMTP). Use hostname or IP address *)
 smtp_server = "127.0.0.1"

	(* The port to use on the mail server (default 25) *)
 smtp_port = 25

	(* Your e-mail if you want to receive mails when downloads are completed *)
 mail = ""

	(* Does your mail-server need <...> around addresses *)
 add_mail_brackets = false

	(* Send filename in mail subject *)
 filename_in_subject = true

	(* Put a prefix for the filename here which shows up in the notification mail *)
 url_in_mail = ""


    (************************************)
    (* SECTION : Paths *)
    (* Paths options *)
    (************************************)



	(* The directory where temporary files should be put *)
 temp_directory = "./temp"

	(* The directory where downloaded files should be moved after commit *)
 incoming_directory = "./incoming"

	(* Sharing strategy the share command will use when none is specified *)
 default_sharing_strategy = all_files

	(* Directories where files will be shared *)
 shared_directories = [
  {     dirname = shared
     networks = []
     strategy = all_files
     priority = 0
};]


    (************************************)
    (* SECTION : Security *)
    (* Security options *)
    (************************************)



	(* Commands that you are allowed to be call from the interface. These
	commands should short, so that the core is not blocked more than necessary. *)
 allowed_commands = [
  (df, df);
  (ls, "ls incoming");]

	(* Allow you to use any command with ! in the interface instead of only the
	ones in allowed_commands *)
 allow_any_command = false

	(* The users that are defined on this core. The default user is
	called 'admin', and uses an empty password. To create new users,
	login as admin in mldonkey, and use the 'add_user' command. *)
 users = [
  (admin, "31D6CFE0D16AE931B73C59D7E0C089C0");]

	(* Allow others to browse our share list (0: none, 1: friends only, 2: everyone *)
 allow_browse_share = 2

	(* Regexp of messages to filter out, example: string1\|string2\|string3 *)
 messages_filter = "Your client is connecting too fast"


    (************************************)
    (* SECTION : Other *)
    (* Other options *)
    (************************************)



	(* (experimental) *)
 save_results = 0

	(* filters on replies (replies will be kept). *)
 filters = ""

	(* Buffer writes and flush after buffer_writes_delay seconds (experimental) *)
 buffer_writes = false

	(* build statistics about eMule mods *)
 emule_mods_count = false

	(* show all eMule mods in statistics *)
 emule_mods_showall = false

	(* The IP address used to bind the p2p clients *)
 client_bind_addr = "0.0.0.0"



(*****************************************************************)
(*                                                               *)
(*                       ADVANCED OPTIONS                        *)
(*                                                               *)
(*        All the options after this line are for the expert     *)
(*        user. Do not modify them if you are not   sure.        *)
(*                                                               *)
(*****************************************************************)





    (************************************)
    (* SECTION : Interfaces FOR EXPERTS *)
    (* Options to control ports used by mldonkey interfaces *)
    (************************************)



	(* The IP address used to bind the http server *)
 http_bind_addr = "0.0.0.0"

	(* The IP address used to bind the gui server *)
 gui_bind_addr = "0.0.0.0"

	(* The IP address used to bind the telnet server *)
 telnet_bind_addr = "0.0.0.0"

	(* Should *all* sources for a file be shown on HTML/telnet vd <num> *)
 print_all_sources = false

	(* Improved telnet interface *)
 improved_telnet = true


    (************************************)
    (* SECTION : Bandwidth FOR EXPERTS *)
    (*  *)
    (************************************)



	(* The delay in milliseconds to wait in the event loop. Can be decreased to
	increase the bandwidth usage, or increased to lower the CPU usage. *)
 loop_delay = 30


    (************************************)
    (* SECTION : Networks FOR EXPERTS *)
    (* Networks options *)
    (************************************)



	(* Set to true if you also want mldonkey to run as an audiogalaxy satellite (experimental) *)
 enable_audiogalaxy = false

	(* Set to true if you also want mldonkey to run as a OpenFT sub node (experimental) *)
 enable_openft = false


    (************************************)
    (* SECTION : Network Config FOR EXPERTS *)
    (* Network config options *)
    (************************************)



	(* URLs of RSS feeds *)
 rss_feeds = []

	(* IP blocking list filename (peerguardian format) *)
 ip_blocking = "./guarding.p2p"

	(* The size of the header of a TCP/IP packet on your connection (ppp adds
	    14 bytes sometimes, so modify to take that into account) *)
 tcpip_packet_size = 40

	(* The size of the MTU of a TCP/IP packet on your connection *)
 mtu_packet_size = 1500

	(* The size of the frame packet on your network (on my cable link, it is 250) *)
 packet_frame_size = 250

	(* The size of the minimal packet you want mldonkey to send when data is
	available on the connection *)
 minimal_packet_size = 600

	(* URL where mldonkey can download update information on the network *)
 network_update_url = ""

	(* IP:port of the network redirector *)
 redirector = "129.104.11.42:3999"


    (************************************)
    (* SECTION : HTML mods FOR EXPERTS *)
    (* Options to configure HTML mode *)
    (************************************)



	(* Whether to use the modified WEB interface *)
 html_mods = true

	(* Which html_mods style to use (set with html_mods_style command) *)
 html_mods_style = 0

	(* Whether to use human readable GMk number format *)
 html_mods_human_readable = true

	(* Whether to use relative availability in the WEB interface *)
 html_mods_use_relative_availability = true

	(* Whether to display the Net column in vd output *)
 html_mods_vd_network = true

	(* Whether to display the Active Sources column in vd output *)
 html_mods_vd_active_sources = true

	(* Whether to display the Age column in vd output *)
 html_mods_vd_age = true

	(* Whether to display the Last column in vd output *)
 html_mods_vd_last = true

	(* Whether to display the Priority column in vd output *)
 html_mods_vd_prio = true

	(* Whether to display the Queues in vd # output *)
 html_mods_vd_queues = true

	(* Change height of download indicator bar in vd output *)
 html_vd_barheight = 2

	(* Whether to display the pending slots in uploaders command *)
 html_mods_show_pending = true

	(* Whether to load the mldonkey_messages.ini file (false=use internal settings) *)
 html_mods_load_message_file = false

	(* Maximum chat messages to log in memory *)
 html_mods_max_messages = 50

	(* Whether to use checkboxes in the WEB interface for download list *)
 html_checkbox_vd_file_list = true

	(* Whether to use checkboxes in the WEB interface for search result list *)
 html_checkbox_search_file_list = false


    (************************************)
    (* SECTION : Debug FOR EXPERTS *)
    (* Debug options *)
    (************************************)



	(* If this option is set, IP addresses on the local network are allowed 
	(only for debugging) *)
 allow_local_network = false

	(* size of log in number of records *)
 log_size = 300

	(* The file in which you want mldonkey to log its debug messages. If you
	  set this option, mldonkey will log this info in the file until you use the
	'close_log' command. The log file may become very large. You can
	    also enable logging in a file after startup using the 'log_file' command. *)
 log_file = ""

	(* A space-separated list of keywords. Each keyword triggers
	  printing information on the corresponding messages:
	  mc : debug client messages
	  mct : debug emule clients tags
	  ms : debug server messages
	  connect : debug connections
	  net : debug net
	  verb : debug other
	  loc : debug source research
	  sp : debug source propagation 
	  sm : debug source management
	  do : some download warnings
	  up : some upload warnings
	  unk : unknown messages
	  ov : overnet
	  share: debug sharing
	  md4 : md4 computation
	  udp : udp messages
	  hc: http_client messages
	  hs: http_server messages
	 *)
 verbosity = ""


    (************************************)
    (* SECTION : Download FOR EXPERTS *)
    (* Download options *)
    (************************************)



	(* Set to true if you want MLdonkey to emulate sparse files on your disk.
	  Files will use less space, but <preview> and <recover> won't work anymore.
	  Works only on Edonkey plugin. EXPERIMENTAL. *)
 emulate_sparsefiles = false


    (************************************)
    (* SECTION : Startup FOR EXPERTS *)
    (* Startup options *)
    (************************************)



	(* How many megabytes should MLdonkey keep for saving configuration files. *)
 config_files_security_space = 10

	(* Send an UDP packet to a central servers with the list of servers you
	  are currently connected to, for the central server to be able to
	    generate accurate server lists. *)
 propagate_servers = false


    (************************************)
    (* SECTION : Paths FOR EXPERTS *)
    (* Paths options *)
    (************************************)



	(* The upload prio of the incoming directory *)
 incoming_directory_prio = 0

	(* Name of program used for preview (first arg is local filename, second arg
	    is name of file as searched on eDonkey *)
 previewer = mldonkey_previewer

	(* Directory where mldonkey binaries are installed *)
 mldonkey_bin = "."

	(* Name of GUI to start *)
 mldonkey_gui = "./mlgui"


    (************************************)
    (* SECTION : MLChat FOR EXPERTS *)
    (* MLChat options *)
    (************************************)



	(* port of the external chat application *)
 chat_app_port = 5036

	(* hostname of the external chat application *)
 chat_app_host = localhost

	(* port used by the external chat application to use the core as a proxy *)
 chat_port = 4002

	(* The IP address used to bind the chat server *)
 chat_bind_addr = "0.0.0.0"

	(* the id to use for communicating with the core console through chat interface *)
 chat_console_id = "donkey console"

	(* use the chat to indicate when a file has been downloaded *)
 chat_warning_for_downloaded = true


    (************************************)
    (* SECTION : Other FOR EXPERTS *)
    (* Other options *)
    (************************************)



	(* keep seen files in history to allow local search (can be expensive in memory) *)
 use_file_history = false

	(* Buffer writes and flush after buffer_writes_delay seconds (experimental) *)
 buffer_writes_delay = 30.000000

	(* Flush buffers if buffers exceed buffer_writes_threshold kB (experimental) *)
 buffer_writes_threshold = 1024

	(* Timeout on client connections when not queued *)
 client_timeout = 40.000000

	(* The size of the buffer between the client and its GUI. Can be useful
	to increase when the connection between them has a small bandwith *)
 interface_buffer = 1000000

	(* The size long names will be shortened to in the interface *)
 max_name_len = 50

	(* The size long client names will be shortened to in the interface *)
 max_client_name_len = 25

	(* Is the default terminal an ANSI terminal (escape sequences can be used) *)
 term_ansi = true

	(* Delay between updates to the GUI *)
 update_gui_delay = 1.000000

	(* The realm shown when connecting with a WEB browser *)
 http_realm = MLdonkey

	(* This option controls whether the WEB interface should use frames or not *)
 use_html_frames = true

	(* The height of the command frame in pixel (depends on your screen and browser sizes) *)
 commands_frame_height = 42

	(* Message printed at startup (automatically downloaded from the previous
	    URL directory *)
 motd_html = "Welcome to MLdonkey"

	(* Force compaction every <n> hours (in [1..24]) *)
 compaction_delay = 2

	(* The delay between reloads of the vd output in the WEB interface *)
 vd_reload_delay = 120

	(* (experimental) *)
 dp500_pclink = false

	(* (experimental) *)
 dp500_port = 8000

	(* (experimental) *)
 dp500_buffer = 2000000

	(* (experimental) *)
 dp500_directory = dp500

	(* Should the MLSUBMIT.REG file be created *)
 create_mlsubmit = true

	(* Size of the minor heap in kB *)
 minor_heap_size = 32

	(* The minimal delay between two connections to the same client (in seconds) *)
 min_reask_delay = 600

	(* Whether to display results already downloaded *)
 display_downloaded_results = true

	(* Minimal number of results for filter form to appear *)
 filter_table_threshold = 50

	(* Maximal size of the buffers of a client *)
 client_buffer_size = 500000

	(* The delay between two saves of the 'downloads.ini' file (default is 15 minutes) *)
 save_options_delay = 900.000000

	(* timeout when connecting to a server *)
 server_connection_timeout = 15.000000

	(* The delay between one glance at a file and another *)
 download_sample_rate = 1.000000

	(* How many samples go into an estimate of transfer rates *)
 download_sample_size = 10

	(* This option defines a set of date at which some commands have to be executed.
	  For each tuple, the first argument is a list of week days (from 0 to 6), 
	  the second is a list of hours (from 0 to 23) and the last one a command to
	  execute. Can be used with 'pause all' and 'resume all' for example to
	  resume and pause downloads automatically for the night. *)
 calendar = []

	(* The percentage of free memory before a compaction is triggered *)
 compaction_overhead = 25

	(* Maximal number of results displayed for a search *)
 max_displayed_results = 1000

	(* (internal option) *)
 options_version = 2
